import express from 'express';
import dotenv from 'dotenv';
import cors from 'cors';
import morgan from 'morgan';
import { sequelize } from './src/models/index.js';

// Routes
import authRoutes from './src/routes/authRoutes.js';
import productRoutes from './src/routes/productRoutes.js';
import orderRoutes from './src/routes/orderRoutes.js';
import adminCatalogRoutes from './src/routes/adminCatalogRoutes.js';
import adminUserRoutes from './src/routes/adminUserRoutes.js';
import adminStatsRoutes from './src/routes/adminStatsRoutes.js';

dotenv.config();

const app = express();

app.use(cors());
app.use(morgan('dev'));
app.use(express.json());

// Public routes
app.use('/api/auth', authRoutes);
app.use('/api/products', productRoutes);
app.use('/api/orders', orderRoutes);

// Admin routes
app.use('/api/admin', adminCatalogRoutes);
app.use('/api/admin', adminUserRoutes);
app.use('/api/admin', adminStatsRoutes);

// Health check
app.get('/api/health', (_req, res) => res.json({ ok: true }));

const PORT = process.env.PORT || 4000;

// Start server regardless of DB; log DB status
(async () => {
  try {
    await sequelize.authenticate();
    console.log('✅ Database connected');
  } catch (err) {
    console.error('□□❌ Database connection error (continuing):', err?.message || err);
  }
  app.listen(PORT, '127.0.0.1', () => console.log(`□ Server running on port ${PORT}`));
})();
