import fs from 'fs';
import fsp from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname  = path.dirname(__filename);

// Prefer MAILER_OUTBOX; fallback to ./outbox
const OUTBOX = process.env.MAILER_OUTBOX || path.join(__dirname, '../../outbox');

async function ensureOutbox() {
  try { await fsp.mkdir(OUTBOX, { recursive: true }); } catch {}
}

export async function sendMail({ to, subject, text, html, meta = {} }) {
  await ensureOutbox();
  const ts = new Date().toISOString().replace(/[:.]/g,'-');
  const safeTo = String(to).replace(/[^a-zA-Z0-9@._-]/g,'_');
  const file = path.join(OUTBOX, `${ts}__${safeTo}.json`);
  const payload = { to, subject, text, html, meta, at: new Date().toISOString() };
  await fsp.writeFile(file, JSON.stringify(payload, null, 2), 'utf8');
  if (process.env.NODE_ENV !== 'test') {
    console.log(`[mailer] FILE mode active. Outbox: ${OUTBOX}`);
  }
  return { ok: true, file };
}
